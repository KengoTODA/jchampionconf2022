{
  "service": {
    "service": "jchampion-conf-2022",
    "serviceObject": {
      "name": "jchampion-conf-2022"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "runtime": "java11",
      "memorySize": 256,
      "timeout": 15,
      "logRetentionInDays": 3,
      "stage": "dev",
      "variableSyntax": "\\${([^{}:]+?(?:\\(|:)(?:[^:{}][^{}]*?)?)}",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "GetTimeLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jchampion-conf-2022-dev-getTime",
              "RetentionInDays": 3
            }
          },
          "LifeCycleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jchampion-conf-2022-dev-lifeCycle",
              "RetentionInDays": 3
            }
          },
          "EchoLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jchampion-conf-2022-dev-echo",
              "RetentionInDays": 3
            }
          },
          "SqsDashexampleLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/jchampion-conf-2022-dev-sqs-example",
              "RetentionInDays": 3
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "jchampion-conf-2022",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jchampion-conf-2022-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/jchampion-conf-2022-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sqs:ReceiveMessage",
                          "sqs:DeleteMessage",
                          "sqs:GetQueueAttributes"
                        ],
                        "Resource": [
                          "arn:aws:sqs:us-east-1:739822415272:jchampion-conf-queue-1"
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "jchampion-conf-2022",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetTimeLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z/jchampion-conf-2022.jar"
              },
              "Handler": "is.alan.jchampionconf2022.endpoint.GetTime",
              "Runtime": "java11",
              "FunctionName": "jchampion-conf-2022-dev-getTime",
              "MemorySize": 256,
              "Timeout": 15,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetTimeLogGroup"
            ]
          },
          "LifeCycleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z/jchampion-conf-2022.jar"
              },
              "Handler": "is.alan.jchampionconf2022.endpoint.LifeCycle",
              "Runtime": "java11",
              "FunctionName": "jchampion-conf-2022-dev-lifeCycle",
              "MemorySize": 256,
              "Timeout": 15,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "LifeCycleLogGroup"
            ]
          },
          "EchoLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z/jchampion-conf-2022.jar"
              },
              "Handler": "is.alan.jchampionconf2022.endpoint.Echo",
              "Runtime": "java11",
              "FunctionName": "jchampion-conf-2022-dev-echo",
              "MemorySize": 256,
              "Timeout": 15,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "EchoLogGroup"
            ]
          },
          "SqsDashexampleLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z/jchampion-conf-2022.jar"
              },
              "Handler": "is.alan.jchampionconf2022.sqs.QueueListener",
              "Runtime": "java11",
              "FunctionName": "jchampion-conf-2022-dev-sqs-example",
              "MemorySize": 256,
              "Timeout": 15,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SqsDashexampleLogGroup"
            ]
          },
          "GetTimeLambdaVersioneW6AT4X8noVcaFtpH48NJhigzczYtgHRFVtbfU1vGM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetTimeLambdaFunction"
              },
              "CodeSha256": "8TRee3LrQrHUj7pRWSfu+eaeBQJsJ58Ntc1hhpXw7Fk="
            }
          },
          "LifeCycleLambdaVersionVgR17RXiddZMSOyLsUuJahFNjypyFWmOREGe6M1ZHHw": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "LifeCycleLambdaFunction"
              },
              "CodeSha256": "8TRee3LrQrHUj7pRWSfu+eaeBQJsJ58Ntc1hhpXw7Fk="
            }
          },
          "EchoLambdaVersionjOL3R0iiKCyAlAVZgYsrqe20XdcdV360K51H3DjiiQ": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "EchoLambdaFunction"
              },
              "CodeSha256": "8TRee3LrQrHUj7pRWSfu+eaeBQJsJ58Ntc1hhpXw7Fk="
            }
          },
          "SqsDashexampleLambdaVersionuBPSlroXSEDddlsHMFue2x4Ls7xX6oBgtuujgO9aU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SqsDashexampleLambdaFunction"
              },
              "CodeSha256": "8TRee3LrQrHUj7pRWSfu+eaeBQJsJ58Ntc1hhpXw7Fk="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-jchampion-conf-2022",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceGettime": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "gettime",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceLifecycle": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "lifecycle",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceEcho": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "echo",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGettimeGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceGettime"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetTimeLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodLifecycleGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceLifecycle"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "LifeCycleLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodEchoAny": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "ANY",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceEcho"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "EchoLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1641764415232": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodGettimeGet",
              "ApiGatewayMethodLifecycleGet",
              "ApiGatewayMethodEchoAny"
            ]
          },
          "GetTimeLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetTimeLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "LifeCycleLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "LifeCycleLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "EchoLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "EchoLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SqsDashexampleEventSourceMappingSQSJchampionconfqueue1": {
            "Type": "AWS::Lambda::EventSourceMapping",
            "DependsOn": [
              "IamRoleLambdaExecution"
            ],
            "Properties": {
              "BatchSize": 10,
              "EventSourceArn": "arn:aws:sqs:us-east-1:739822415272:jchampion-conf-queue-1",
              "FunctionName": {
                "Fn::GetAtt": [
                  "SqsDashexampleLambdaFunction",
                  "Arn"
                ]
              },
              "Enabled": true
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-ServerlessDeploymentBucketName"
            }
          },
          "GetTimeLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetTimeLambdaVersioneW6AT4X8noVcaFtpH48NJhigzczYtgHRFVtbfU1vGM"
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-GetTimeLambdaFunctionQualifiedArn"
            }
          },
          "LifeCycleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "LifeCycleLambdaVersionVgR17RXiddZMSOyLsUuJahFNjypyFWmOREGe6M1ZHHw"
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-LifeCycleLambdaFunctionQualifiedArn"
            }
          },
          "EchoLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "EchoLambdaVersionjOL3R0iiKCyAlAVZgYsrqe20XdcdV360K51H3DjiiQ"
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-EchoLambdaFunctionQualifiedArn"
            }
          },
          "SqsDashexampleLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SqsDashexampleLambdaVersionuBPSlroXSEDddlsHMFue2x4Ls7xX6oBgtuujgO9aU"
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-SqsDashexampleLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-jchampion-conf-2022-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "awsId": 739822415272
    },
    "pluginsData": {},
    "functions": {
      "getTime": {
        "handler": "is.alan.jchampionconf2022.endpoint.GetTime",
        "events": [
          {
            "http": {
              "path": "gettime",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jchampion-conf-2022-dev-getTime",
        "package": {},
        "memory": 256,
        "timeout": 15,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "GetTimeLambdaVersioneW6AT4X8noVcaFtpH48NJhigzczYtgHRFVtbfU1vGM"
      },
      "lifeCycle": {
        "handler": "is.alan.jchampionconf2022.endpoint.LifeCycle",
        "events": [
          {
            "http": {
              "path": "lifecycle",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jchampion-conf-2022-dev-lifeCycle",
        "package": {},
        "memory": 256,
        "timeout": 15,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "LifeCycleLambdaVersionVgR17RXiddZMSOyLsUuJahFNjypyFWmOREGe6M1ZHHw"
      },
      "echo": {
        "handler": "is.alan.jchampionconf2022.endpoint.Echo",
        "events": [
          {
            "http": {
              "path": "echo",
              "method": "any",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "jchampion-conf-2022-dev-echo",
        "package": {},
        "memory": 256,
        "timeout": 15,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "EchoLambdaVersionjOL3R0iiKCyAlAVZgYsrqe20XdcdV360K51H3DjiiQ"
      },
      "sqs-example": {
        "handler": "is.alan.jchampionconf2022.sqs.QueueListener",
        "events": [
          {
            "sqs": {
              "arn": "arn:aws:sqs:us-east-1:739822415272:jchampion-conf-queue-1",
              "batchSize": 10
            }
          }
        ],
        "name": "jchampion-conf-2022-dev-sqs-example",
        "package": {},
        "memory": 256,
        "timeout": 15,
        "runtime": "java11",
        "vpc": {},
        "versionLogicalId": "SqsDashexampleLambdaVersionuBPSlroXSEDddlsHMFue2x4Ls7xX6oBgtuujgO9aU"
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "layers": {},
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "frameworkVersion": "2",
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "package": {
        "artifact": "target/jchampion-conf-2022.jar",
        "artifactDirectoryName": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      }
    },
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/jchampion-conf-2022/dev/1641764417285-2022-01-09T21:40:17.285Z",
    "artifact": "jchampion-conf-2022.jar"
  }
}